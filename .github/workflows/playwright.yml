name: 'Playwright tests'
on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    branches:
      - main
      - master
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  PROJECT: web-beryx
  NAMESPACE: web-beryx
  HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  HEAD_BRANCH_NAME: ${{ github.head_ref }}

jobs:
  playwright:
    name: Playwright Shard
    runs-on: zondax-runners
    strategy:
      matrix:
        shard: [1/2, 2/2]
    container:
      image: node:18-bookworm
      env:
        GHOST_API_URL: ${{ secrets.GHOST_API_URL }}
        GHOST_API_KEY: ${{ secrets.GHOST_API_KEY }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        TURBO_TEAM: zondax
        NEXT_PUBLIC_NAT_SERVER_CREDENTIAL: ${{ secrets.NEXT_PUBLIC_NAT_SERVER_CREDENTIAL }}
        NEXT_PUBLIC_NAT_SERVER: ${{ secrets.NEXT_PUBLIC_NAT_SERVER }}
        NEXT_PUBLIC_MUI_GRID_LICENSE: ${{ secrets.NEXT_PUBLIC_MUI_GRID_LICENSE }}
        PLAYWRIGHT_SHARD: ${{ matrix.shard }}
        CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Disable shallow clone
      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: npx turbo build

      - name: Install dependencies
        run: yarn e2e:install

      - name: Run Playwright tests
        run: yarn e2e:sharding
        env:
          CLOUDFLARE_PROTECTED_API_CLIENT_ID: ${{ secrets.CLOUDFLARE_PROTECTED_API_CLIENT_ID }}
          CLOUDFLARE_PROTECTED_API_CLIENT_SECRET: ${{ secrets.CLOUDFLARE_PROTECTED_API_CLIENT_SECRET }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 15
